'''
Вася решил накопить денег на два одинаковых велосипеда — себе и сестре. У Васи есть копилка, в которую каждый день он может добавлять деньги (если, конечно, у него есть такая финансовая возможность). В процессе накопления Вася не вынимает деньги из копилки.

У вас есть информация о росте Васиных накоплений — сколько у Васи в копилке было денег в каждый из дней.

Ваша задача — по заданной стоимости велосипеда определить

первый день, в которой Вася смог бы купить один велосипед,
и первый день, в который Вася смог бы купить два велосипеда.
Подсказка: решение должно работать за O(log n).

Формат ввода
В первой строке дано число дней n, по которым велись наблюдения за Васиными накоплениями. 1 ≤ n ≤ 106.

В следующей строке записаны n целых неотрицательных чисел. Числа идут в порядке неубывания. Каждое из чисел не превосходит 106.

В третьей строке записано целое положительное число s — стоимость велосипеда. Это число не превосходит 106.

Формат вывода
Нужно вывести два числа — номера дней по условию задачи.

Если необходимой суммы в копилке не нашлось, нужно вернуть -1 вместо номера дня.
'''




def read_input():
    len_seq = int(input())
    n = [*map(int, (input().split()))]
    price = int(input())
    return len_seq, n, price



def find_num(arr, value, left, right):
    mid = (left+right) // 2
    if left >= right:
        return -1
    if (arr[mid] >= value) and (arr[mid-1] < value or mid == 0):
        return mid + 1
    if value <= arr[mid]:
        return find_num(arr, value, left, right=mid)
    else:
        return find_num(arr, value, left=mid+1, right=right)

if __name__ == '__main__':
    len_seq, n, price = read_input()
    print(find_num(n, price, 0, len_seq), end=' ')
    print(find_num(n, price*2, 0, len_seq))